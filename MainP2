
if _G.GetAxe == true then
local A_1 = "ax"
local A_2 = true
local Event = game:GetService("ReplicatedStorage").Remotes.Shop
Event:FireServer(A_1, A_2)
end

game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-367.284546, 8.62833786, -147.377441, 0.999052823, -4.5490593e-05, 0.0435142592, -2.72170792e-06, 0.999999404, 0.00110791519, -0.0435142815, -0.00110698421, 0.999052227)
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false

local VirtualInputManager = game:GetService('VirtualInputManager')
local List = {
   "Tree1",
   "Tree2",
   "Tree3",
   "Tree4"
}



if _G.enabled == true then

    VirtualInputManager:SendKeyEvent(true, "M", false, game)
    wait()
    VirtualInputManager:SendKeyEvent(false, "M", false, game)

while _G.enabled do
for _,v in pairs(game:GetService("Workspace").Map.Trees:GetChildren()) do
   if table.find(List, v.Name) then
       print(v)
       
       if _G.enabled == true then
        local Part1 = v:GetChildren()
Part1[1].CanCollide = false
Part1[2].CanCollide = false
Part1[3].CanCollide = false
Part1[4].CanCollide = false
Part1[5].CanCollide = false

wait(0.1)
v.Base.CanCollide = true
           game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame + Vector3.new(0,6,0)
       
wait(.01)
       local A_1 = "wood"
local A_2 = false
local Event = game:GetService("ReplicatedStorage").Remotes.Shop
Event:FireServer(A_1, A_2)
if table.find(List, v.Name) then
    wait()
    else
        wait(1)
   end
end
end
end
wait()
end





end

end
